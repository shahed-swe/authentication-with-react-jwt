{"version":3,"sources":["actions/types.jsx","actions/auth.jsx","components/Navbav.jsx","hocs/Layout.jsx","containers/Home.jsx","containers/Activate.jsx","containers/Signup.jsx","containers/Login.jsx","containers/ResetPassword.jsx","containers/ResetPasswordConfirm.jsx","components/Error.jsx","reducers/auth.jsx","reducers/index.jsx","store.jsx","App.jsx","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","USER_LOAD_SUCCESS","USER_LOAD_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAILED","LOGOUT","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAILED","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","user","logout","className","to","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","name","href","onClick","authLinks","checkauthenticated","body","JSON","stringify","token","post","code","props","useEffect","children","role","verify","uid","match","useState","verified","setVerified","style","marginTop","e","params","signup","email","password","re_password","accountCreated","setAccountCreated","formData","setFormData","onChange","target","value","onSubmit","preventDefault","htmlFor","placeholder","required","login","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","Error","initialState","access","refresh","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Home","Login","Signup","Activate","ResetPassword","ResetPasswordConfirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c656e7d.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const USER_LOAD_SUCCESS = 'USER_LOAD_SUCCESS';\r\nexport const USER_LOAD_FAIL = 'USER_LOAD_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = \"AUTHENTICATED_SUCCESS\";\r\nexport const AUTHENTICATED_FAILED = \"AUTHENTICATED_FAILED\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const PASSWORD_RESET_SUCCESS = \"PASSWORD_RESET_SUCCESS\";\r\nexport const PASSWORD_RESET_FAIL = \"PASSWORD_RESET_FAIL\";\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = \"PASSWORD_RESET_CONFIRM_SUCCESS\";\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = \"PASSWORD_RESET_CONFIRM_FAIL\";\r\n\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\";\r\nexport const ACTIVATION_SUCCESS = \"ACTIVATION_SUCCESS\";\r\nexport const ACTIVATION_FAILED = \"ACTIVATION_FAILED\";","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOAD_SUCCESS,\r\n    USER_LOAD_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAILED,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAILED,\r\n    LOGOUT,\r\n} from './types';\r\n\r\n\r\n\r\n\r\n\r\nexport const checkauthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')){\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Accept':'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({token: localStorage.getItem('access')});\r\n        try{\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n            if(res.data.code !== 'token_not_valid'){\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAILED\r\n                });\r\n            }\r\n        }catch(err){\r\n            dispatch({\r\n                type: AUTHENTICATED_FAILED\r\n            });\r\n        }\r\n    }else{\r\n        dispatch({\r\n            type: AUTHENTICATED_FAILED \r\n        });\r\n    }\r\n};\r\n\r\nexport const load_user = () => async dispatch =>{\r\n    if (localStorage.getItem('access')){\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n        try{\r\n            \r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n            dispatch({\r\n                type: USER_LOAD_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        }catch(err){\r\n            dispatch({\r\n                type: USER_LOAD_FAIL\r\n            })\r\n        }\r\n\r\n    }\r\n    else{\r\n        dispatch({\r\n            type: USER_LOAD_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = (name, email, password, re_password) => async dispatch =>  {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({name, email, password, re_password});\r\n\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    }catch(err){\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type':'application/json',\r\n        }\r\n    }\r\n    const body = JSON.stringify({uid, token});\r\n\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n        });\r\n    }catch(err){\r\n        dispatch({\r\n            type: ACTIVATION_FAILED,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email, password) => async dispatch =>{\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    const body = JSON.stringify({email, password});\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(load_user());\r\n    }catch(err){\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    const body = JSON.stringify({email});\r\n    try{\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch(err){\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({uid, token, new_password, re_new_password});\r\n\r\n    try{\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    }catch(err){\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const logout = () => async dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n};\r\n\r\n","import React, {Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../actions/auth';\r\n\r\n\r\nconst Navbar = ({logout, isAuthenticated, user}) => {    \r\n    const guestLinks = () => {\r\n        return(\r\n            <Fragment>\r\n                <li className='nav-item'>\r\n                    <Link className='nav-link' to=\"/login\">Login</Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link className='nav-link' to='/signup'>Signup</Link>\r\n                </li>\r\n        </Fragment>\r\n        )\r\n        \r\n    };\r\n\r\n\r\n    const authLinks = () => {\r\n        const name = (user != null) ? user.name : null;\r\n        return(\r\n            <Fragment>\r\n                <li className='nav-item'>\r\n                    <Link className='nav-link' href=\"#!\" onClick={logout}>Logout</Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link className='nav-link' href=\"#!\">{name}</Link>\r\n                </li>\r\n            </Fragment>\r\n        )\r\n    };\r\n\r\n\r\n    return(\r\n        <div>\r\n            <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n                <div className='container-fluid container'>\r\n                    <Link className='navbar-brand' to=\"/\">Django React Auth</Link>\r\n                    <button className='navbar-toggler' type='button' data-bs-toggle='collapse' data-bs-target='#navbarNav' aria-controls='navbarNav' aria-expanded='false' aria-label='Toggle navigation'>\r\n                    <span className='navbar-toggler-icon'></span>\r\n                    </button>\r\n                    <div className='collapse navbar-collapse' id='navbarNav'>\r\n                    <ul className='navbar-nav'>\r\n                        <li className='nav-item'>\r\n                            <Link className='nav-link active' aria-current='page' to=\"/\">Home</Link>\r\n                        </li>\r\n                        {isAuthenticated ? authLinks() : guestLinks()}\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    user: state.auth.user,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(Navbar);","import React, {useEffect} from 'react';\r\nimport Navbar from '../components/Navbav';\r\nimport {connect} from 'react-redux';\r\nimport {checkauthenticated, load_user} from '../actions/auth';\r\n\r\n\r\nconst Layout = (props) => {\r\n    useEffect(() => {\r\n        props.checkauthenticated();\r\n        props.load_user();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {checkauthenticated, load_user})(Layout);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Home = ({isAuthenticated}) => (\r\n    <div className='container'>\r\n        <div className='p-5 mb-4 bg-light rounded-3'>\r\n        <div className='container-fluid py-5'>\r\n            <h1 className='display-5 fw-bold'>Home Page</h1>\r\n            <p className='col-md-8 fs-4'>Using a series of utilities, you can create this jumbotron, just like the one in previous versions of Bootstrap. Check out the examples below for how you can remix and restyle it to your liking.</p>\r\n            \r\n            {isAuthenticated ? null : <Link className='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>}\r\n        </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps)(Home);","import React, {useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {verify} from '../actions/auth';\r\n\r\n\r\n\r\nconst Activate = ({match, verify}) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    }\r\n\r\n    if(verified){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{marginTop:'200px'}}>\r\n                <h1>Verify Your ACcount:</h1>\r\n                <div className=\"btn btn-primary shadow-none\" onClick={verify_account} type=\"button\">Verify</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default connect(null, {verify})(Activate);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {signup} from '../actions/auth';\r\nimport './../App.css'\r\n\r\nconst Signup = ({signup, isAuthenticated}) => {\r\n    const [accountCreated, setAccountCreated] = useState(false)\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const {name, email, password, re_password} = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if(password == re_password){\r\n            signup(name, email, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n\r\n    if(isAuthenticated){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    if(accountCreated){\r\n        return <Redirect to=\"/login\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Sign Up</h1>\r\n            <p>Register for your new account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name:</label>\r\n                    <input\r\n                        className = 'form-control'\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your name\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Email:</label>\r\n                    <input\r\n                        className = 'form-control'\r\n                        type=\"email\"\r\n                        placeholder=\"Enter your email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input \r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"re_password\">Confirm Password</label>\r\n                    <input \r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"re_password\"\r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary for-login\" type=\"submit\">Sign Up</button>\r\n                </div>\r\n                \r\n            </form>\r\n            <p className=\"mt-3\">\r\n                Already have an account? <Link to=\"/login\">Signup</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, {signup})(Signup);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../actions/auth';\r\nimport './../App.css'\r\n\r\nconst Login = ({login, isAuthenticated}) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        login(email, password)\r\n    }\r\n    // if the user is authenticated we will redirect the user to home page\r\n    if(isAuthenticated){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Sign in</h1>\r\n            <p>Sign in to your account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        className = 'form-control'\r\n                        type=\"email\"\r\n                        placeholder=\"Enter your email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input \r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary for-login\" type=\"submit\">Login</button>\r\n                </div>\r\n                \r\n            </form>\r\n            <p className=\"mt-3\">\r\n                Don't have an account? <Link to=\"/signup\">Signup</Link>\r\n            </p>\r\n            <p className=\"mt-3\">\r\n                Forgot password? <Link to=\"/reset_password\">ResetPassword</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {reset_password} from '../actions/auth';\r\nimport './../App.css'\r\n\r\nconst ResetPassword = ({reset_password, isAuthenticated}) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n    });\r\n\r\n    const {email} = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        reset_password(email);\r\n        setRequestSent(true);\r\n    }\r\n    // if the user is authenticated we will redirect the user to home page\r\n    if(requestSent){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    if(isAuthenticated){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Reset Password</h1>\r\n            <p>Forgot Password</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        className = 'form-control'\r\n                        type=\"email\"\r\n                        placeholder=\"Enter your email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary for-login\" type=\"submit\">Reset Password</button>\r\n                </div>\r\n                \r\n            </form>\r\n            <p className=\"mt-3\">\r\n                Don't have an account? <Link to=\"/signup\">Signup</Link>\r\n            </p>\r\n            <p className=\"mt-3\">\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, {reset_password})(ResetPassword);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {reset_password_confirm} from '../actions/auth';\r\nimport './../App.css'\r\n\r\nconst ResetPasswordConfirm = ({match,reset_password_confirm, isAuthenticated}) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const {new_password, re_new_password} = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    }\r\n    // if the user is authenticated we will redirect the user to home page\r\n    if(requestSent){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    if(isAuthenticated){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Reset Password</h1>\r\n            <p>Forgot Password</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Password</label>\r\n                    <input\r\n                        className = 'form-control'\r\n                        type=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        name=\"new_password\"\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Confirm Password</label>\r\n                    <input\r\n                        className = 'form-control'\r\n                        type=\"password\"\r\n                        placeholder=\"Enter Confirm Password\"\r\n                        name=\"re_new_password\"\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary for-login\" type=\"submit\">Reset Password</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps, {reset_password_confirm})(ResetPasswordConfirm);","import React from 'react';\r\n\r\nconst Error = () => (\r\n    <div className=\"container\">\r\n        <h1>404 Page not found</h1>\r\n    </div>\r\n)\r\nexport default Error;","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOAD_SUCCESS,\r\n    USER_LOAD_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAILED,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAILED,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case AUTHENTICATED_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case AUTHENTICATED_FAILED:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return{\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('access')\r\n            localStorage.removeItem('refresh')\r\n            return{\r\n                ...state,\r\n                access:null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null,\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n            }\r\n        case SIGNUP_FAIL:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: false,\r\n            }\r\n        case USER_LOAD_SUCCESS:\r\n            return{\r\n                ...state,\r\n                user: payload,\r\n            }\r\n        case USER_LOAD_FAIL:\r\n            return{\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return{\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n            return {\r\n                ...state,\r\n            }\r\n        case PASSWORD_RESET_FAIL:\r\n            return {\r\n                ...state,\r\n            }\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n            return {\r\n                ...state,\r\n            }\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n            return{\r\n                ...state,\r\n            }\r\n        case ACTIVATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n            }\r\n        case ACTIVATION_FAILED:\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Layout from './hocs/Layout';\r\n\r\nimport Home from './containers/Home';\r\nimport Activate from './containers/Activate';\r\nimport Signup from './containers/Signup';\r\nimport Login from './containers/Login';\r\nimport ResetPassword from './containers/ResetPassword';\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\r\nimport Error from './components/Error';\r\nimport  {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home}/>\r\n                    <Route exact path=\"/login\" component={Login}/>\r\n                    <Route exact path=\"/signup\" component={Signup}/>\r\n                    <Route exact path=\"/activate/:uid/:token\" component={Activate}/>\r\n                    <Route exact path=\"/reset_password\" component={ResetPassword}/>\r\n                    <Route exact path=\"/password/reset/confirm/:uid/:token\" component={ResetPasswordConfirm}/>\r\n                    <Route path=\"*\" component={Error}/>\r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}